#!/bin/sh
set -eu

# Bulk rename files with the power of vim
# USAGE: vimv [file...]

FILENAMES_SRC="$(mktemp "${TMPDIR:-/tmp}/vimv.XXX")"
FILENAMES_DST="$(mktemp "${TMPDIR:-/tmp}/vimv.XXX")"
cleanup() { rm -f "${FILENAMES_SRC}" "${FILENAMES_DST}"; }
trap cleanup EXIT TERM INT HUP

[ "${#}" -gt 0 ] || exit 1

printf "%s\n" "$@" | tee "${FILENAMES_SRC}" >"${FILENAMES_DST}"

 LINES_PRE="$(wc -l "${FILENAMES_DST}")"
${EDITOR:-vi} "${FILENAMES_DST}"
LINES_POST="$(wc -l "${FILENAMES_DST}")"

if [ "${LINES_POST}" != "${LINES_PRE}" ]; then
    printf "%s\n" "WARN: Number of files changed. Did you delete a line by accident? Aborting..." >&2
    exit 1
fi

# Input: lines of SRC and DEST separated by RS (\x1e)
move_files() {
    COUNT="0"

    while IFS="$(printf '\n\036')" read -r SRC_FILE DST_FILE; do
        [ "${SRC_FILE}" != "${DST_FILE}" ] || continue
        [ -e "${SRC_FILE}" ] || {
            printf "WARN: Skipping nonexistent file: %s\n" "${SRC_FILE}" >&2
            continue
        }

        mkdir -p "$(dirname "${DST_FILE}")"
        mv "${SRC_FILE}" "${DST_FILE}"

        COUNT="$((COUNT + 1))"
    done

    printf "Renamed %d files.\n" "${COUNT}"
}

# Join src and dest with the record separator
paste -d"$(printf '\036')" "${FILENAMES_SRC}" "${FILENAMES_DST}" | move_files
