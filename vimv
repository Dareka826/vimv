#!/bin/sh
set -eu

# Bulk rename with the power of vim
# USAGE: vimv [path...]

_FS="$(printf "\034")"
NL="$(printf "\nx")"
NL="${NL%x}"

# Create file for editing
EDIT_TMP="$(mktemp "${TMPDIR:-/tmp}/vimv.XXX")"
cleanup() { rm -f "${EDIT_TMP}"; }
trap cleanup EXIT TERM INT HUP

# If no arguments, re-exec with paths in current dir
[ "${#}" -gt 0 ] || {
    if [ -x "$0" ]; then
        exec "$0" ./*
    else
        exec /bin/sh "$0" ./*
    fi
}

# Store supplied paths (and strip leading './') ; copy to file list
PATHS_SRC="$(printf "%s\n" "$@" | sed 's/^\.\///')${NL}"
printf "%s" "${PATHS_SRC}" >"${EDIT_TMP}"

# Edit the file list
${EDITOR:-vi} "${EDIT_TMP}"

# Check that the number of lines stayed the same
if [ "$(printf "%s" "${PATHS_SRC}" | wc -l)" != "$(wc -l <"${EDIT_TMP}")" ]; then
    printf "%s\n" "[W]: Number of lines changed. Did you delete one by accident? Aborting..." >&2
    exit 1
fi

# Input: lines of SRC and DEST separated by _FS
move_paths() {
    COUNT="0"

    IFS="${NL}${_FS}"
    while read -r SRC_PATH DST_PATH; do
        [ "${SRC_PATH}" != "${DST_PATH}" ] || continue
        [ -e "${SRC_PATH}" ] || {
            printf "[W]: Skipping nonexistent path: %s\n" "${SRC_PATH}" >&2
            continue
        }

        # Add leading './' if not an absolute path
        [ "$(printf "%s" "${SRC_PATH}" | cut -c1)" = "/" ] || SRC_PATH="./${SRC_PATH}"
        [ "$(printf "%s" "${DST_PATH}" | cut -c1)" = "/" ] || DST_PATH="./${DST_PATH}"

        mkdir -p -- "$(dirname "${DST_PATH}")"
        mv -- "${SRC_PATH}" "${DST_PATH}"

        COUNT="$((COUNT + 1))"
    done

    printf "Renamed %d paths.\n" "${COUNT}"
}

# Join src and dest with _FS
printf "%s" "${PATHS_SRC}" | paste -d"${_FS}" - "${EDIT_TMP}" | move_paths
